@App:name("GRPCServiceIntegration")
@App:description("Publish grpc requests using defualt service, receive their responses and process them")

/*

Purpose:
    This application demonstrates how to publish grpc requests with default grpc service(EventService) and receive their response and process them.

Prerequisites:
    1) Save this sample
    2) Pack autogenerated protobuf and grpc service classes into a jar (If you are using maven to generate protobuf and grpc classes, you can use the .jar file that get creates in the target folder after executing the 'mvn clean install' command)
    3) Navigate to {SiddhiDistribution_Home}/jars and put that packed jar into jars folder
    4) Stop the siddhi editor and re-start the editor again.

Executing the Sample:
    1) Start the Siddhi application by clicking on 'Run'

    2) If the Siddhi application starts successfully, the following messages would be shown on the console
        * Grpc-Service.siddhi - Started Successfully!

    Notes:
    Do not change the value of the port(8889), because the sample server that runs in this example uses the port 8889.


Testing the Sample:
    Publish grpc requests to the grpc service defined by 'publisher.url' in Sink configuration. You may starts a server with ant command as follows,
    1) Navigate to {SiddhiDistribution_Home}/samples/sample-clients/grpc-server and run "ant" command as follows:
            Run "ant" command in the terminal
            If you want to stop the server press "Ctrl+C" in the terminal anytime
    2) Navigate to Event Simulator (Ctrl+Shift+I)
    3) Select this sample from "Siddhi App Name"
    4) Select "FooStream" and give relevant values to all attributes fields
    5) Press send to sent event to the server


Viewing the Results:
    See the output on the console.
        GRPCServiceIntegration : OutputStream : Event{timestamp=1569616293114, data=[Hello from Server!], isExpired=false}
    you will see a similar output like this.

*/

@sink(type='grpc-call',
    publisher.url = 'grpc://localhost:8889/org.wso2.grpc.EventService/process/mySeq',
    sink.id= '1', @map(type='json'))
    define stream FooStream (message String);

@source(type='grpc-call-response', sink.id= '1', @map(type='json'))
    define stream BarStream (message String);

@sink(type='log')
    define stream OutputStream (message String);

@info(name = 'query')
    from BarStream select * insert into OutputStream;
