################################################################################
#   Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved
#
#   Licensed under the Apache License, Version 2.0 (the \"License\");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an \"AS IS\" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
################################################################################

  # Carbon Configuration Parameters
wso2.carbon:
    # value to uniquely identify a server
  id: wso2-sp
    # server name
  name: WSO2 Stream Processor
    # ports used by this server
  ports:
      # port offset
    offset: 0

wso2.transport.http:
  transportProperties:
    -
      name: "server.bootstrap.socket.timeout"
      value: 60
    -
      name: "client.bootstrap.socket.timeout"
      value: 60
    -
      name: "latency.metrics.enabled"
      value: true

  listenerConfigurations:
    -
      id: "default"
      host: "0.0.0.0"
      port: 9090
    -
      id: "msf4j-https"
      host: "0.0.0.0"
      port: 9443
      scheme: https
      keyStoreFile: "${carbon.home}/resources/security/wso2carbon.jks"
      keyStorePassword: wso2carbon
      certPass: wso2carbon

  senderConfigurations:
    -
      id: "http-sender"

# This is the main configuration for metrics
wso2.metrics:
  # Enable Metrics
  enabled: true

  # Metrics JMX Configuration
  jmx:
    # Register MBean when initializing Metrics
    registerMBean: true
    # MBean Name
    name: org.wso2.carbon:type=Metrics

  reservoir:
    # Reservoir Type used for Histogram and Timer
    # Available types are EXPONENTIALLY_DECAYING, UNIFORM, SLIDING_WINDOW, SLIDING_TIME_WINDOW & HDR_HISTOGRAM
    type: EXPONENTIALLY_DECAYING
    # Parameters for reservoir implementations
    parameters:
      # The number of measurements to store in SLIDING_WINDOW reservoir or
      # number of samples to keep in UNIFORM reservoir
      size: 1028
      # The window of time in SLIDING_TIME_WINDOW reservoir
      window: 1
      # The unit of window in SLIDING_TIME_WINDOW reservoir. See java.util.concurrent.TimeUnit
      windowUnit: HOURS
      # The precision to use in the Recorder to be used in HDR_HISTOGRAM reservoir
      numberOfSignificantValueDigits: 2
      # Reset the HdrHistogram when taking a snapshot
      resetOnSnapshot: false

  # Metrics reporting configurations
  # The JMX, Console, CSV and SLF4J reporters are in the Metrics Core feature.
  reporting:
    jmx:
      - # The name for the JMX Reporter
        name: JMX

        # Enable JMX Reporter
        enabled: true

    console:
      - # The name for the Console Reporter
        name: Console

        # Enable Console Reporter
        enabled: false

        # Polling Period in seconds.
        # This is the period for polling metrics from the metric registry and printing in the console
        pollingPeriod: 5

    csv:
      - # The name for the CSV Reporter
        name: CSV

        # Enable CSV Reporter
        enabled: false

        # The location for CSV files. There is a CSV file for each metric.
        location: ${carbon.home}/wso2/worker/logs/metrics/

        # Polling Period in seconds.
        # This is the period for polling metrics from the metric registry and update CSV files in the given location
        pollingPeriod: 10

    slf4j:
      - # The name for the SLF4J Reporter
        name: SLF4J

        # Enable SLF4J Reporter
        enabled: false

        # The Logger name
        loggerName: metrics

        # The Marker name
        # markerName: metrics

        # Polling Period in seconds.
        # This is the period for polling metrics from the metric registry and logging to the configured logger
        pollingPeriod: 15

wso2.metrics.jdbc:
  # Data Source Configurations for JDBC Reporters
  dataSource:
    # Default Data Source Configuration
    - &JDBC01
      # The "lookupDataSource" flag specifies whether the datasource should be looked up via JNDI.
      # If this is set to true the data source should be configured.
      # If this is set to false, the datasource will be created by the properties defined in "dataSourceProperties"
      lookupDataSource: true

      # JNDI name of the data source to be used by the JDBC Reporter.
      # This data source should be defined in a *-datasources.xml file in conf/datasources directory.
      dataSourceName: java:comp/env/jdbc/WSO2MetricsDB

      # Schedule regular deletion of metrics data older than a set number of days.
      # It is recommended that you enable this job to ensure your metrics tables do not get extremely large.
      # Deleting data older than seven days should be sufficient.
      scheduledCleanup:
        # Enable scheduled cleanup to delete Metrics data in the database.
        enabled: true

        # The scheduled job will cleanup all data older than the specified days
        daysToKeep: 7

        # This is the period for each cleanup operation in seconds.
        scheduledCleanupPeriod: 86400

  # The JDBC Reporter is in the Metrics JDBC Core feature
  reporting:
    # The JDBC Reporter configurations will be ignored if the Metrics JDBC Core feature is not available in runtime
    jdbc:
      - # The name for the JDBC Reporter
        name: JDBC

        # Enable JDBC Reporter
        enabled: true

        # Source of Metrics, which will be used to identify each metric in database -->
        # Commented to use the hostname by default
        # source: Carbon

        # Alias referring to the Data Source configuration
        dataSource: *JDBC01

        # Polling Period in seconds.
        # This is the period for polling metrics from the metric registry and updating the database with the values
        pollingPeriod: 30

# Deployment configuration parameters
wso2.artifact.deployment:
    # Scheduler update interval
  updateInterval: 5

  # Periodic Persistence Configuration
state.persistence:
  enabled: false
  intervalInMin: 1
  revisionsToKeep: 2
  persistenceStore: io.siddhi.distribution.core.persistence.FileSystemPersistenceStore
  config:
    location: siddhi-app-persistence

  # Datasource Configurations
wso2.datasources:
  dataSources:
    -
      definition:
        configuration:
          connectionTestQuery: "SELECT 1"
          driverClassName: org.h2.Driver
          idleTimeout: 60000
          isAutoCommit: false
          jdbcUrl: "jdbc:h2:${sys:carbon.home}/wso2/${sys:wso2.runtime}/database/WSO2_CARBON_DB;DB_CLOSE_ON_EXIT=FALSE;LOCK_TIMEOUT=60000"
          maxPoolSize: 50
          password: wso2carbon
          username: wso2carbon
          validationTimeout: 30000
        type: RDBMS
      description: "The datasource used for registry and user manager"
      name: WSO2_CARBON_DB

    # carbon metrics data source
    - name: WSO2_METRICS_DB
      description: The datasource used for dashboard feature
      jndiConfig:
        name: jdbc/WSO2MetricsDB
      definition:
        type: RDBMS
        configuration:
          jdbcUrl: 'jdbc:h2:${sys:carbon.home}/wso2/dashboard/database/metrics;AUTO_SERVER=TRUE'
          username: wso2carbon
          password: wso2carbon
          driverClassName: org.h2.Driver
          maxPoolSize: 50
          idleTimeout: 60000
          connectionTestQuery: SELECT 1
          validationTimeout: 30000
          isAutoCommit: false
